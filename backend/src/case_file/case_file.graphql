scalar Date

type CaseFile {
  caseIdentifier: String
  leadIdentifier: String
  assessmentDetails: Assessment
  preventionDetails: Prevention
  note: Note
  equipment: [EquipmentDetails]
  isReviewRequired: Boolean
  reviewComplete: ReviewCompleteAction
}

type ReviewCompleteAction {
  actor: String!
  date: Date!
  actionCode: String!
  actionId: String
}

type Assessment {
  actionNotRequired: Boolean
  actionJustificationCode: String
  actionJustificationShortDescription: String
  actionJustificationLongDescription: String
  actionJustificationActiveIndicator: Boolean
  actions: [CaseFileAction]
}

input CreateAssessmentInput {
  leadIdentifier: String
  assessmentDetails: AssessmentDetailsInput!
  agencyCode: String!
  caseCode: String!
  createUserId: String!
}

input AssessmentDetailsInput {
  actionNotRequired: Boolean!
  actionJustificationCode: String
  actions: [AssessmentActionInput]!
}

input AssessmentActionInput {
  actor: String!
  date: Date!
  actionCode: String!
  activeIndicator: Boolean!
}

input UpdateAssessmentInput {
  caseIdentifier: String!
  leadIdentifier: String
  assessmentDetails: AssessmentDetailsInput!
  agencyCode: String!
  caseCode: String!
  updateUserId: String!
}

type Prevention {
  actions: [CaseFileAction]
}

input CreatePreventionInput {
  leadIdentifier: String
  preventionDetails: PreventionDetailsInput!
  agencyCode: String!
  caseCode: String!
  createUserId: String!
}

input PreventionDetailsInput {
  actions: [PreventionActionInput]!
}

input PreventionActionInput {
  actor: String!
  date: Date!
  actionCode: String!
  activeIndicator: Boolean!
}

input UpdatePreventionInput {
  caseIdentifier: String!
  leadIdentifier: String
  preventionDetails: PreventionDetailsInput!
  agencyCode: String!
  caseCode: String!
  updateUserId: String!
}

input ReviewInput {
  leadIdentifier: String!
  agencyCode: String!
  caseCode: String!
  userId: String!
  isReviewRequired: Boolean!
  caseIdentifier: String
  reviewComplete: ReviewActionInput
}

input ReviewActionInput {
  actor: String!
  date: Date!
  actionCode: String!
  actionId: String
}

type Note {
  note: String!
  action: CaseFileAction!
}

input CreateSupplementalNoteInput {
  leadIdentifier: String!
  note: String!
  actor: String!
  agencyCode: String!
  caseCode: String!
  createUserId: String!
}

input UpdateSupplementalNoteInput {
  caseIdentifier: String!
  note: String!
  actor: String!
  updateUserId: String!
  actionId: String!
}

input DeleteSupplementalNoteInput {
  caseIdentifier: String!
  actor: String!
  updateUserId: String!
  actionId: String!
}

type EquipmentDetails {
  id: String
  typeCode: String
  activeIndicator: Boolean
  address: String
  xCoordinate: String
  yCoordinate: String
  createDate: Date
  actions: [CaseFileAction]
}

input CreateEquipmentInput {
  leadIdentifier: String!
  createUserId: String!
  agencyCode: String!
  caseCode: String!
  equipment: [EquipmentDetailsInput]!
}

input UpdateEquipmentInput {
  leadIdentifier: String!
  updateUserId: String!
  agencyCode: String!
  caseCode: String!
  equipment: [EquipmentDetailsInput]!
}

input DeleteEquipmentInput {
  id: String!
  updateUserId: String!
}

input EquipmentDetailsInput {
  id: String
  typeCode: String!
  activeIndicator: Boolean!
  address: String
  xCoordinate: String
  yCoordinate: String
  actions: [EquipmentActionInput]!
}

input EquipmentActionInput {
  actionGuid: String
  date: Date
  actor: String
  activeIndicator: Boolean
  actionCode: String
}

type Query {
  getCaseFile(caseIdentifier: String!): CaseFile
  getCaseFileByLeadId(leadIdentifier: String!): CaseFile
}

type Mutation {
  createAssessment(createAssessmentInput: CreateAssessmentInput!): CaseFile!
  updateAssessment(updateAssessmentInput: UpdateAssessmentInput!): CaseFile!

  createPrevention(createPreventionInput: CreatePreventionInput!): CaseFile!
  updatePrevention(updatePreventionInput: UpdatePreventionInput!): CaseFile!

  createReview(reviewInput: ReviewInput!): CaseFile!
  updateReview(reviewInput: ReviewInput!): CaseFile!

  createNote(input: CreateSupplementalNoteInput!): CaseFile!
  updateNote(input: UpdateSupplementalNoteInput!): CaseFile!
  deleteNote(input: DeleteSupplementalNoteInput!): CaseFile!

  createEquipment(createEquipmentInput: CreateEquipmentInput!): CaseFile!
  updateEquipment(updateEquipmentInput: UpdateEquipmentInput!): CaseFile!
  deleteEquipment(deleteEquipmentInput: DeleteEquipmentInput!): Boolean!
}