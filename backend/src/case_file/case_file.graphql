scalar Date

type CaseFile {
  caseIdentifier : String
  leadIdentifier: String
  assessmentDetails: Assessment
  equipmentDetails: [EquipmentDetails]
}

type Assessment {
  actionNotRequired: Boolean
  actionJustificationCode: String
  actionJustificationShortDescription: String
  actionJustificationLongDescription: String
  actionJustificationActiveIndicator: Boolean
  actions: [AssessmentAction]
}

type AssessmentAction{
  actor: String!
  date: Date!
  actionCode: String!
  shortDescription: String
  longDescription: String
  activeIndicator: Boolean
}

input CreateAssessmentInput {
  leadIdentifier: String
  assessmentDetails: AssessmentDetailsInput!
  agencyCode: String!
  caseCode: String!
  createUserId: String!
}

input AssessmentDetailsInput {
  actionNotRequired: Boolean!
  actionJustificationCode: String
  actions: [AssessmentActionInput]!
}

input AssessmentActionInput{
  actor: String!
  date: Date!
  actionCode: String!
  activeIndicator: Boolean!
}

input UpdateAssessmentInput {
  caseIdentifier: String!
  leadIdentifier: String
  assessmentDetails: AssessmentDetailsInput!
  agencyCode: String!
  caseCode: String!
  updateUserId: String!
}

type Prevention {
  actions: [PreventionAction]
}

type PreventionAction{
  actor: String!
  date: Date!
  actionCode: String!
  shortDescription: String
  longDescription: String
  activeIndicator: Boolean
}

input CreatePreventionInput {
  leadIdentifier: String
  preventionDetails: PreventionDetailsInput!
  agencyCode: String!
  caseCode: String!
  createUserId: String!
}

input PreventionDetailsInput {
  actions: [PreventionActionInput]!
}

input PreventionActionInput{
  actor: String!
  date: Date!
  actionCode: String!
  activeIndicator: Boolean!
}

input UpdatePreventionInput {
  caseIdentifier: String!
  leadIdentifier: String
  preventionDetails: PreventionDetailsInput!
  agencyCode: String!
  caseCode: String!
  updateUserId: String!
}

type Query {
  getCaseFile( caseIdentifier: String!): CaseFile
  getCaseFileByLeadId( leadIdentifier: String!): CaseFile
}

type Mutation {
  createAssessment(createAssessmentInput: CreateAssessmentInput!): CaseFile!
  updateAssessment(updateAssessmentInput: UpdateAssessmentInput!): CaseFile!

  createPrevention(createAssessmentInput: CreateAssessmentInput!): CaseFile!
  updatePrevention(updateAssessmentInput: UpdateAssessmentInput!): CaseFile!

  createEquipment(createEquipmentInput: CreateEquipmentInput!): CaseFile!
}

type Equipment {
  caseIdentifier: String
  leadIdentifier: String
  equipmentDetails: [EquipmentDetails]
}

type EquipmentDetails {
  actionEquipmentTypeCode: String
  actionEquipmentTypeActiveIndicator: Boolean
  address: String
  xCoordinate: String
  yCoordinate: String
  actions: [EquipmentAction]
}

type EquipmentAction {
  actor: String
  date: Date
  actionCode: String
  shortDescription: String
  longDescription: String
  activeIndicator: Boolean
}

input CreateEquipmentInput {
  leadIdentifier: String
  createUserId: String
  agencyCode: String
  caseCode: String
  equipmentDetails: [EquipmentDetailsInput]
}

input EquipmentDetailsInput {
  actionEquipmentTypeCode: String
  actionEquipmentTypeActiveIndicator: Boolean
  address: String
  xCoordinate: String
  yCoordinate: String
  actions: [EquipmentActionInput]
}

input EquipmentActionInput {
  date: Date
  actor: String
  activeIndicator: Boolean
  actionCode: String
}
