---
version: "3.9"

x-var:
  - &POSTGRES_USER
    postgres
  - &POSTGRES_PASSWORD
    default
  - &POSTGRES_DATABASE
    postgres

x-postgres-vars: &postgres-vars
  POSTGRES_HOST: database
  POSTGRES_USER: *POSTGRES_USER
  POSTGRES_PASSWORD: *POSTGRES_PASSWORD
  POSTGRES_DATABASE: *POSTGRES_DATABASE

services:
  database:
    image: postgres:15
    container_name: case-management-database
    environment:
      <<: *postgres-vars
    healthcheck:
      test: ["CMD", "pg_isready", "-U", *POSTGRES_USER]
    ports: ["5433:5432"]

  migrations:
    image: flyway/flyway:9.22-alpine
    container_name: case-management-migrations
    command:
      - info
      - migrate
      - -outOfOrder=true
    volumes: ["./migrations/sql:/flyway/sql:ro"]
    environment:
      FLYWAY_URL: jdbc:postgresql://database:5432/postgres
      FLYWAY_USER: *POSTGRES_USER
      FLYWAY_PASSWORD: *POSTGRES_PASSWORD
      FLYWAY_BASELINE_ON_MIGRATE: true
      FLYWAY_DEFAULT_SCHEMA: public
    depends_on:
      database:
        condition: service_healthy

  backend:
    container_name: case-management-backend
    entrypoint: sh -c "npm i && npm run start:dev"
    environment:
      <<: *postgres-vars
      NODE_ENV: development
    image: node:20-bullseye
    ports: ["3002:3000"]
    volumes: ["./backend:/app", "/app/node_modules"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/api"]
    working_dir: "/app"
    depends_on:
      migrations:
        condition: service_started
        
  caddy:
    container_name: caddy
    profiles: ["caddy"]
    build: ./frontend
    environment:
      NODE_ENV: development
      PORT: 3000
      BACKEND_URL: http://backend:3002
      LOG_LEVEL: info
    ports: ["3005:3000"]
    volumes: ["./frontend/Caddyfile:/etc/caddy/Caddyfile"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
    depends_on:
      backend:
        condition: service_healthy
