---
version: "3.9"

x-var:
  - &POSTGRES_USER postgres
  - &POSTGRES_PASSWORD default
  - &SHARED_PASSWORD default2
  - &CM_PASSWORD default3
  - &INV_PASSWORD default4
  - &INS_PASSWORD default5
  - &POSTGRES_DATABASE postgres

x-postgres-vars: &postgres-vars
  POSTGRES_HOST: database
  POSTGRES_USER: *POSTGRES_USER
  POSTGRES_PASSWORD: *POSTGRES_PASSWORD
  SHARED_PASSWORD: *SHARED_PASSWORD
  INV_PASSWORD: *INV_PASSWORD
  INS_PASSWORD: *INS_PASSWORD
  CM_PASSWORD: *CM_PASSWORD
  POSTGRES_DATABASE: *POSTGRES_DATABASE

services:
  database:
    image: postgis/postgis:16-3.4
    container_name: cm-database
    environment:
      <<: *postgres-vars
    healthcheck:
      test: ["CMD", "pg_isready", "-U", *POSTGRES_USER]
    ports: ["5433:5432"]

  migrations:
    image: flyway/flyway:9.22-alpine
    container_name: case-management-migrations
    command:
      - info
      - migrate
      - -outOfOrder=true
    volumes:
      - "./migrations/sql:/flyway/sql:ro"
      - "./migrations/test-only-migrations:/flyway/sql-test:ro"
    environment:
      FLYWAY_URL: jdbc:postgresql://cm-database:5432/postgres
      FLYWAY_USER: *POSTGRES_USER
      FLYWAY_PASSWORD: *POSTGRES_PASSWORD
      FLYWAY_PLACEHOLDERS_SHARED_PASSWORD: *SHARED_PASSWORD
      FLYWAY_PLACEHOLDERS_CM_PASSWORD: *CM_PASSWORD
      FLYWAY_PLACEHOLDERS_INV_PASSWORD: *INV_PASSWORD
      FLYWAY_PLACEHOLDERS_INS_PASSWORD: *INS_PASSWORD
      FLYWAY_BASELINE_ON_MIGRATE: true
      FLYWAY_DEFAULT_SCHEMA: case_management
      FLYWAY_LOCATIONS: filesystem:./sql, filesystem:./sql-test
    depends_on:
      database:
        condition: service_healthy

  backend:
    container_name: cm-backend
    entrypoint: sh -c "npm i && npm run prisma-generate-cm && \
      npm run prisma-generate-shared && \
      npm run prisma-generate-investigation && \
      npm run prisma-generate-inspection && \
      npm run start:dev"
    environment:
      <<: *postgres-vars
      NODE_ENV: development
      POSTGRESQL_URL: "postgresql://postgres:default@cm-database:5432/postgres?schema=case_management"
      BACKEND_PORT: "3000"
      KEYCLOCK_CLIENT_ID: compliance-and-enforcement-digital-services-web-4794
      JWKS_URI: https://dev.loginproxy.gov.bc.ca/auth/realms/standard/protocol/openid-connect/certs
      JWT_ISSUER: https://dev.loginproxy.gov.bc.ca/auth/realms/standard
    image: node:20-bullseye
    ports: ["3003:3000"]
    volumes: ["./backend:/app", "/app/node_modules"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api"]
    working_dir: "/app"
    depends_on:
      migrations:
        condition: service_completed_successfully
