---
version: "3.9"

x-var:
  - &POSTGRES_USER
    postgres
  - &POSTGRES_PASSWORD
    default
  - &POSTGRES_DATABASE
    postgres

x-postgres-vars: &postgres-vars
  POSTGRES_HOST: database
  POSTGRES_USER: *POSTGRES_USER
  POSTGRES_PASSWORD: *POSTGRES_PASSWORD
  POSTGRES_DATABASE: *POSTGRES_DATABASE

services:
  database:
    image: postgres:15
    container_name: cm-database
    environment:
      <<: *postgres-vars
    healthcheck:
      test: ["CMD", "pg_isready", "-U", *POSTGRES_USER]
    ports: ["5433:5432"]

  migrations:
    image: flyway/flyway:9-alpine
    container_name: migrations
    command: info migrate info
    volumes: ["./migrations/sql:/flyway/sql:ro"]
    environment:
      FLYWAY_URL: jdbc:postgresql://cm-database:5432/postgres
      FLYWAY_USER: *POSTGRES_USER
      FLYWAY_PASSWORD: *POSTGRES_PASSWORD
      FLYWAY_BASELINE_ON_MIGRATE: true
      FLYWAY_DEFAULT_SCHEMA: case_management
    depends_on:
      database:
        condition: service_healthy

  backend:
    container_name: cm-backend
    entrypoint: sh -c "npm i && npm run start:dev"
    environment:
      <<: *postgres-vars
      NODE_ENV: development
      POSTGRESQL_URL: "postgresql://postgres:default@cm-database:5432/postgres?schema=case_management"
      BACKEND_PORT: "3000"
    image: node:20-bullseye
    ports: ["3003:3000"]
    volumes: ["./backend:/app", "/app/node_modules"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api"]
    working_dir: "/app"
    depends_on:
      migrations:
        condition: service_started
